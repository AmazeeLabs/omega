/**
 * Polyfill the behavior of window.matchMedia.
 *
 * @see http://dev.w3.org/csswg/cssom-view/#widl-Window-matchMedia-MediaQueryList-DOMString-query
 *
 * Test whether a CSS media type or media query applies. Register listeners
 * to MediaQueryList objects.
 *
 * Adapted from https://github.com/paulirish/matchMedia.js with the addition
 * of addListener and removeListener. The polyfill referenced above uses
 * polling to trigger registered listeners on matchMedia tests.
 * This polyfill triggers tests on window resize and orientationchange.
 */
window.matchMedia=window.matchMedia||function(e,t,n){"use strict";function u(e){this.media=e;this.matches=false;this.applies=false;this.check.call(this)}var r=e.documentElement;var i=r.firstElementChild||r.firstChild;var s=e.createElement("body");var o=e.createElement("div");o.id="mq-test-1";o.style.cssText="position:absolute;top:-100em";s.style.background="none";s.appendChild(o);u.prototype={listeners:[],check:function(){var e;o.innerHTML='Â­<style media="'+this.media+'"> #mq-test-1 {width: 42px;}</style>';r.insertBefore(s,i);e=o.offsetWidth===42;r.removeChild(s);this.matches=e;this.applies=e},addListener:function(e){var r=function(e,t){return function(){var n=e.matches;e.check();if(n!==e.matches){t.call(e,e)}}}(this,n.debounce(e,250));this.listeners.push({callback:e,handler:r});if("addEventListener"in t){t.addEventListener("resize",r);t.addEventListener("orientationchange",r)}else if("attachEvent"in t){t.attachEvent("onresize",r);t.attachEvent("onorientationchange",r)}},removeListener:function(e){for(var n=0,r=this.listeners;n<r.length;n++){if(r[n].callback===e){if("removeEventListener"in t){t.removeEventListener("resize",r[n].handler);t.removeEventListener("orientationchange",r[n].handler)}else if("detachEvent"in t){t.detachEvent("onresize",r[n].handler);t.detachEvent("onorientationchange",r[n].handler)}r.splice(n,1)}}}};return function(e){return new u(e)}}(document,window,Drupal);(function(e,t,n){"use strict";n.behaviors.omegaMediaQueryClasses={handler:function(t,n){if(n.matches){e("body").removeClass(t+"-inactive").addClass(t+"-active")}else{e("body").removeClass(t+"-active").addClass(t+"-inactive")}},attach:function(n,r){var i=this;var s=r.omega||{};var o=s.mediaQueries||{};e("body",n).once("omega-mediaqueries",function(){e.each(o,function(e,n){var r=t.matchMedia(n);r.name=e;i.handler(e,r);r.addListener(function(t){i.handler(e,t)})})})}};e.matchmedia=function(e){return t.matchMedia(e)};var r=e.event.special.mediaquery={objects:{},add:function(e){r.objects[e.guid]=t.matchMedia(e.data);r.objects[e.guid].addListener(e.handler)},remove:function(e){r.objects[e.guid].removeListener(e.handler)}};e.fn.mediaquery=function(t,n){return e(this).bind("mediaquery",t,n)}})(jQuery,window,Drupal)
